dist: trusty
sudo: required
language: julia
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=gcc GCC=4.9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
    - os: osx
      osx_image: xcode8
      compiler: clang
      julia: 0.5
env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang;
      fi
    - |
      # Install Julia from PPA
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
          sudo add-apt-repository ppa:staticfloat/juliareleases -y
          sudo apt-get update -q
          sudo apt-get install julia -y
      fi

install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    # Install xtensor and other conda requirements
    - conda install xtensor==0.10.2 -c conda-forge
    - cd deps/xtensor-julia/test
    - conda env create -f ./test-environment.yml
    - source activate test-xtensor-julia
    - cd ..
    # Install CxxWrap
    - julia -E "Pkg.add(\"CxxWrap\")"
    # Build pure Cpp tests
    - CxxWrap_DIR=$(julia -E "Pkg.dir(\"CxxWrap\", \"deps\", \"usr\", \"lib\", \"cmake\")")
    - CxxWrap_DIR=${CxxWrap_DIR//\"/}
    - cmake -D BUILD_TESTS=ON -D CxxWrap_DIR=$CxxWrap_DIR -D CMAKE_INSTALL_PREFIX=$HOME/miniconda .
    - make -j2 test_xtensor_julia
    # Build Julia Package
    - julia -E "Pkg.clone(\"$TRAVIS_BUILD_DIR\", \"Xtensor\"); Pkg.build(\"Xtensor\"); Pkg.test(\"Xtensor\");"

script:
    - make xtest

